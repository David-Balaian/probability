{"version":3,"sources":["redux/actionTypes.js","components/addItem/constants.js","components/addItem/useAddItems.js","redux/actions.js","components/addItem/addItem.jsx","components/getItems/helpers.js","redux/selectors.js","components/getItems/useGetItems.js","components/getItems/getItems.jsx","App.js","redux/rootReducer.js","redux/storeConfig.js","index.js","components/addItem/addItem.module.css","components/getItems/getItems.module.css"],"names":["ADD_ITEM","itemValues","label","type","initialValues","name","price","weight","validationSchema","Yup","shape","required","typeError","useAddItems","dispatch","useDispatch","handleSave","payload","values","id","Date","now","resetForm","useFormik","validateOnBlur","onSubmit","errors","touched","handleSubmit","handleChange","handleReset","Item","className","styles","itemCont","Paper","elevation","paper","map","item","TextField","input","fullWidth","value","error","helperText","onChange","variant","InputLabelProps","shrink","btnCont","Button","onClick","color","getProbability","allWeight","toFixed","getList","store","list","getAllWeight","useGetItems","useSelector","useState","selectedItems","setSelectedItems","handleRefresh","useCallback","maxIndex","randomItems","len","length","randomIndex","hasOwnProperty","probability","Object","getRandomItemsWithProbability","useEffect","allItemsCount","GetItems","container","cardsContainer","cardCont","Card","CardContent","Typography","component","refreshBtn","disabled","App","initialState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","state","action","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.90b35ec9.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\"","import * as Yup from 'yup'\r\n\r\nexport const itemValues = [\r\n    { label: \"name\", type: \"string\" }, \r\n    { label: \"price\", type: \"number\" }, \r\n    { label: \"weight\", type: \"number\" }, \r\n    { label: \"start date\", type: \"date\" }, \r\n    { label: \"end date\", type: \"date\" }, \r\n];\r\n\r\nexport const initialValues = {\r\n    name: '',\r\n    price: '',\r\n    weight: '',\r\n    'start date': '',\r\n    'end date': '',\r\n}\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required('name is required'),\r\n    price: Yup.number().typeError('must be number').required('price is required'),\r\n    weight: Yup.number().typeError('must be number').required('weight is required'),\r\n    'start date': Yup.date().typeError('must be vaild date'),\r\n    'end date': Yup.date().typeError('must be vaild date'),\r\n});","import { useDispatch } from 'react-redux'\r\nimport { addItem } from '../../redux/actions';\r\nimport { useFormik } from 'formik';\r\nimport { initialValues, validationSchema } from \"./constants\";\r\n\r\nexport default function useAddItems() {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleReset = () => {\r\n        resetForm()\r\n    }\r\n    const handleSave = () => {\r\n        dispatch(addItem({ ...values, id: Date.now() }))\r\n        resetForm()\r\n    }\r\n\r\n    const { errors, touched, values, handleSubmit, handleChange, resetForm } = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        validateOnBlur: false,\r\n        onSubmit: () => {\r\n            handleSave();\r\n        },\r\n    });\r\n    return {\r\n        errors,\r\n        touched,\r\n        values,\r\n        handleSubmit,\r\n        handleChange,\r\n        handleReset,\r\n    }\r\n}","import {\r\n    ADD_ITEM,\r\n  } from './actionTypes';\r\n\r\nexport const addItem = (payload) => ({\r\n    type: ADD_ITEM,\r\n    payload,\r\n})\r\n","import React from 'react'\r\nimport { TextField, Button, Paper } from '@material-ui/core/'\r\nimport styles from './addItem.module.css'\r\nimport useAddItems from './useAddItems';\r\nimport { itemValues } from './constants';\r\n\r\n\r\nexport default function Item() {\r\n\r\n    const {\r\n        errors,\r\n        touched,\r\n        values,\r\n        handleSubmit,\r\n        handleChange,\r\n        handleReset,\r\n    } = useAddItems()\r\n\r\n    return (\r\n        <div className={styles.itemCont}>\r\n            <Paper elevation={3} className={styles.paper}>\r\n                {itemValues.map(item => (\r\n                    <TextField\r\n                        className={styles.input}\r\n                        fullWidth\r\n                        key={item.label}\r\n                        name={item.label}\r\n                        type={item.type}\r\n                        value={values[item.label]}\r\n                        error={touched[item.label] && !!errors[item.label]}\r\n                        helperText={touched[item.label] && errors[item.label]}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        label={item.label}\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                ))}\r\n                <div className={styles.btnCont}>\r\n                    <Button\r\n                        fullWidth\r\n                        onClick={handleReset}\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        onClick={handleSubmit}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getProbability = (weight, allWeight) => {\r\n    return (weight / allWeight * 100).toFixed(2) + \"%\";\r\n}\r\n\r\nconst getRandomNumber = (maxIndex) => {\r\n    return Date.now() % maxIndex\r\n}\r\n\r\nexport const getRandomItemsWithProbability = (list, allWeight) => {\r\n    const randomItems = {};\r\n    const len = list.length;\r\n    do {\r\n        const randomIndex = getRandomNumber(len)\r\n        if (randomItems.hasOwnProperty(randomIndex)) continue;\r\n        randomItems[randomIndex] = {\r\n                ...list[randomIndex],\r\n                probability: getProbability(list[randomIndex].weight, allWeight)\r\n            }\r\n    } while (Object.values(randomItems).length !== 5)\r\n    return Object.values(randomItems);\r\n}","export const getList = store => store.list;\r\nexport const getAllWeight = store => store.allWeight;\r\n","\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { getRandomItemsWithProbability } from './helpers';\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllWeight, getList } from '../../redux/selectors';\r\n\r\nexport default function useGetItems() {\r\n    const list = useSelector(getList)\r\n    const allWeight = useSelector(getAllWeight)\r\n    const [selectedItems, setSelectedItems] = useState([])\r\n\r\n    const handleRefresh = useCallback(() => {\r\n        setSelectedItems(getRandomItemsWithProbability(list, allWeight))\r\n    }, [list, allWeight])\r\n\r\n    useEffect(() => {\r\n        list.length > 4 && handleRefresh(list)\r\n    }, [list, handleRefresh])\r\n\r\n    return {\r\n        selectedItems,\r\n        allItemsCount: list.length,\r\n        handleRefresh,\r\n    }\r\n}","import React from 'react'\r\nimport { Card, CardContent, Typography, Button, Paper } from '@material-ui/core/'\r\nimport styles from './getItems.module.css'\r\nimport useGetItems from './useGetItems';\r\n\r\nexport default function GetItems() {\r\n\r\n    const {\r\n        selectedItems,\r\n        allItemsCount,\r\n        handleRefresh,\r\n    } = useGetItems()\r\n\r\n    return <div className={styles.container}>\r\n        <Paper elevation={3}>\r\n            {allItemsCount >= 5 ?\r\n                <>\r\n                    <div className={styles.cardsContainer}>\r\n                        {selectedItems.map((item) => (\r\n                            <div key={item.id} className={styles.cardCont} >\r\n                                <Card>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                            {item.name}\r\n                                        </Typography>\r\n                                        <Typography color=\"textSecondary\">\r\n                                            price: {item.price}\r\n                                        </Typography>\r\n                                        <Typography color=\"textSecondary\">\r\n                                            weight: {item.weight}\r\n                                        </Typography>\r\n                                        <Typography color=\"primary\" component=\"p\">\r\n                                            probability: {item.probability}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                        ))}\r\n                    </div>\r\n                    <Button\r\n                        className={styles.refreshBtn}\r\n                        fullWidth\r\n                        onClick={handleRefresh}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        disabled={allItemsCount < 6}\r\n                    >\r\n                        Refresh\r\n                    </Button>\r\n                </>\r\n                :\r\n                (\r\n                    <h2>\r\n                        {`must be at last ${5 - allItemsCount} items to show probabilities`}\r\n                    </h2>\r\n                )}\r\n\r\n        </Paper>\r\n    </div>\r\n}\r\n","import AddItem from './components/addItem';\nimport GetItems from './components/getItems'\nimport './App.css';\n\n\nfunction App() {\nreturn (\n    <div className=\"App\">\n      <AddItem />\n      <GetItems />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n    ADD_ITEM,\r\n} from './actionTypes';\r\n\r\nconst initialState = {\r\n    list: [],\r\n    allWeight: 0,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload],\r\n                allWeight: state.allWeight + action.payload.weight,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { compose, createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const enhancer = composeEnhancer();\r\n\r\n  const store = createStore(rootReducer, enhancer);\r\n\r\n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/storeConfig'\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCont\":\"addItem_itemCont__3vakW\",\"btnCont\":\"addItem_btnCont__3wQW0\",\"paper\":\"addItem_paper__9aO6h\",\"input\":\"addItem_input__huye3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"getItems_container__1RB_t\",\"cardsContainer\":\"getItems_cardsContainer__1DS3X\",\"cardCont\":\"getItems_cardCont__210aS\"};"],"sourceRoot":""}